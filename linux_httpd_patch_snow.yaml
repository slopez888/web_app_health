- name: software patch demo (httpd using yum package manager)
  hosts: all
  vars:
    username: 
    password:
    instance: 
    packages:
    - httpd
  
  tasks:
    
    - name: ensure a list of packages installed
      yum:
        name: "{{ packages }}"

    - name: List installed version of Apache httpd packages
      yum:
        list: httpd
      register: installed_version
    
    - name: List Apache httpd packages available to upgrade to
      shell: 'yum list available httpd'
      register: available

    - name: look at installed version
      debug:
        var: installed_version
    
    - name: look at available version
      debug:
        var: available

    #- name: install one specific version of Apache
    #  yum:
    #    name: httpd-2.2.29-1.4.amzn1
    #    state: present

    
    #- name: Batch job - copy files remotely
    #  command: cp /mnt/testdir/largedummy.iso /tmp/testdir/largedummy.iso
    #  register: errorCode
    #  ignore_errors: True
    #  #changed_when: False
    #  changed_when: errorCode.rc != 0,-9

   # - name: SERVICENOW incident created if Unknown Error detected
   #   snow_record:
   #     username: admin
   #     password: MyPassw0rd21
   #     instance: dev14202
   #     state: present
   #     table: incident
   #     data:
   #       short_description: "Unknown_Error On app host was found: Batch Job: File Copy Failed because filesystem ran out of space."
   #       severity: 1
   #       priority: 2
   #       approval: rejected
   #       caller_id: "System Administrator"
   #       comments: "The batch job copy failed on {{inventory_hostname}}. This ticket was generated by Ansible Tower API call. \n--------\n The error code is {{errorCode.rc}} No space left on device. Recommendation: The filesystem should be extended. The application owner has been notified.\n--------\n "
   #   register: snow_var
   #   delegate_to: localhost
   #   when: errorCode.changed
#
   # - name: DEBUG SNOW_VAR
   #   debug:
   #     var: snow_var.record.number
  # - local_action: copy content={{ snow_var.record.number }} dest=/tmp/test1/1.2.txt